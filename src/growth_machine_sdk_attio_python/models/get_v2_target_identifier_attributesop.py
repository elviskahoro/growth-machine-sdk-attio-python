"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .attribute import Attribute, AttributeTypedDict
from enum import Enum
from growth_machine_sdk_attio_python.types import BaseModel
from growth_machine_sdk_attio_python.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
)
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetV2TargetIdentifierAttributesTarget(str, Enum):
    r"""Whether the attributes are on an object or a list."""

    OBJECTS = "objects"
    LISTS = "lists"


class GetV2TargetIdentifierAttributesRequestTypedDict(TypedDict):
    target: GetV2TargetIdentifierAttributesTarget
    r"""Whether the attributes are on an object or a list."""
    identifier: str
    limit: NotRequired[int]
    offset: NotRequired[int]
    show_archived: NotRequired[bool]


class GetV2TargetIdentifierAttributesRequest(BaseModel):
    target: Annotated[
        GetV2TargetIdentifierAttributesTarget,
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Whether the attributes are on an object or a list."""

    identifier: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None

    offset: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None

    show_archived: Annotated[
        Optional[bool],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None


class GetV2TargetIdentifierAttributesResponseTypedDict(TypedDict):
    r"""Success"""

    data: List[AttributeTypedDict]


class GetV2TargetIdentifierAttributesResponse(BaseModel):
    r"""Success"""

    data: List[Attribute]
