"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .note import Note, NoteTypedDict
from enum import Enum
from growth_machine_sdk_attio_python.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PostV2NotesFormat(str, Enum):
    r"""The format of the note content to be created. The `plaintext` format uses the line feed character `\n` to create new lines within the note content. The `markdown` format supports rich text formatting, and links."""

    PLAINTEXT = "plaintext"
    MARKDOWN = "markdown"


class PostV2NotesDataTypedDict(TypedDict):
    parent_object: str
    r"""The ID or slug of the parent object the note belongs to."""
    parent_record_id: str
    r"""The ID of the parent record the note belongs to."""
    title: str
    r"""The note title. The title is plaintext only and has no formatting."""
    format_: PostV2NotesFormat
    r"""The format of the note content to be created. The `plaintext` format uses the line feed character `\n` to create new lines within the note content. The `markdown` format supports rich text formatting, and links."""
    content: str
    r"""The representation of the note content in the specified format."""
    created_at: NotRequired[str]
    r"""`created_at` will default to the current time. However, if you wish to backdate a note for migration or other purposes, you can override with a custom `created_at` value. Note that dates before 1970 or in the future are not allowed."""


class PostV2NotesData(BaseModel):
    parent_object: str
    r"""The ID or slug of the parent object the note belongs to."""

    parent_record_id: str
    r"""The ID of the parent record the note belongs to."""

    title: str
    r"""The note title. The title is plaintext only and has no formatting."""

    format_: Annotated[PostV2NotesFormat, pydantic.Field(alias="format")]
    r"""The format of the note content to be created. The `plaintext` format uses the line feed character `\n` to create new lines within the note content. The `markdown` format supports rich text formatting, and links."""

    content: str
    r"""The representation of the note content in the specified format."""

    created_at: Optional[str] = None
    r"""`created_at` will default to the current time. However, if you wish to backdate a note for migration or other purposes, you can override with a custom `created_at` value. Note that dates before 1970 or in the future are not allowed."""


class PostV2NotesRequestTypedDict(TypedDict):
    data: PostV2NotesDataTypedDict


class PostV2NotesRequest(BaseModel):
    data: PostV2NotesData


class PostV2NotesType(str, Enum):
    INVALID_REQUEST_ERROR = "invalid_request_error"


class PostV2NotesCode(str, Enum):
    NOT_FOUND = "not_found"


class PostV2NotesResponseTypedDict(TypedDict):
    r"""Success"""

    data: NoteTypedDict


class PostV2NotesResponse(BaseModel):
    r"""Success"""

    data: Note
